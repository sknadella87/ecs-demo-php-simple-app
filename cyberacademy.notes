1. Create S3 bucket for the code - codedeploypwclab
2. Create a CodeDeploy Application
    - Navigate to the AWS CodeDeploy service page.
    - Select Applications from the left-hand menu.
    - Select Create application.
    - For the Application name, enter "demo-app".
    - For the Compute platform select ECS.
    - Select Create application.

3. Create a CodeDeploy Deployment Group
    - From the CodeDeploy applications details page, select Create deployment group.
    - For the Deployment group name, enter "demo-group".
    - For Service role, select the role created with this lab (the only option).
    - For Deployment type, select In-place.
    - For Environment configuration, select *Amazon EC2 Auto Scaling groups*.
    - From the dropdown box, select Auto Scaling group *la-scale-asg-*, which should be the only option.
    - Scroll down to Load balancer, and select *Classic Load Balancer*. Then, from the dropdown list, select *la-lab* (the only option).
    - Select Create deployment group.

4. Create a CodeDeploy Deployment
    - From the CodeDeploy deployment group details page, select Create deployment.
    - Ensure the Deployment group selected is demo-group.
    - Ensure the Revision type selected is My application is stored in Amazon S3.
    - For Revision location, enter the path of the SampleApp_Linux.zip object in your code bucket. For example: s3://code-bucket-123/SampleApp_Linux.zip.
    - Scroll to Additional deployment behavior settings and under Content options, select Overwrite the content.
    - Select Create deployment.

Method 2:

1. Create S3 bucket "ecstemplatecode" and upload the cloudformation templates within the s3 bucket




Reference Links:


https://github.com/awslabs/ecs-refarch-continuous-deployment

https://docs.aws.amazon.com/codepipeline/latest/userguide/ecs-cd-pipeline.html

https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-ecs-ecr-codedeploy.html

https://medium.com/swlh/aws-cloudformation-managed-complete-ecs-infrastructure-including-ci-cd-pipeline-from-github-to-ecs-b833bb44e01c

https://chintugudiya.org/focus-areas/tech-work/overview-deploying-glific-on-aws-ecs-fargate-with-cd-in-place/

https://github.com/linuxacademy/content-aws-developertools/raw/master/Rolling-updates-to-a-highly-distributed-web-application-with-AWS-CodeDeploy

https://github.com/linuxacademy/content-aws-developertools/raw/master/Rolling-updates-to-a-highly-distributed-web-application-with-AWS-CodeDeploy/SampleApp_Linux.zip

https://adamtheautomator.com/visual-studio-code-github/

Flow:

Method 1: S3 --> Codedeploy --> EC2 <-- ELB

Method 2: Developer --> Github --> Codepipeline --> codebuild --> ecr --> ecs --> Fargate


aws-mfa --duration 129600 --device arn:aws:iam::972311003977:mfa/sai.karthik.nadella@admin.pwc.com --profile hia
export AWS_PROFILE=hia

Github Setup 

1. Enable github extension on VSCode
2. git remote add origin https://github.com/sknadella87
3. Create a repo in github 
4. git clone https://github.com/sknadella87/ecs-demo-php-simple-app.git
5. add or update files to the repo
6. git push